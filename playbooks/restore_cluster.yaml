##########################
## RESTORATION PLAYBOOK ##
##########################


- hosts: masters
  gather_facts: no
  become: yes
  tasks:
 
  - name: Cluster pre check
    lineinfile:
      dest: /etc/etcd/etcd.conf
      regexp: '^ETCD_INITIAL_CLUSTER_STATE=new'
      line: 'ETCD_INITIAL_CLUSTER_STATE=existing'
 
  - name: Exporting scripts
    copy: src="{{ item }}" dest=/opt/ mode=0755
    with_items:
     - ../files/restore.sh
     - ../files/get_env.py
 
- hosts: masters
  gather_facts: no
  become: yes
  tasks:
 
  - name: Stop ose cluster services
    systemd: state=stopped name="{{ item }}"
    with_items:
      - atomic-openshift-master-api
      - atomic-openshift-master-controllers
      - atomic-openshift-node
      - etcd
 
 
  - name: Removing old etcd data directory contents
    shell: "{{ item }}"
    with_items:
      - rm -rf /var/lib/etcd/member/*
 
# FOR DISASTER RECOVERY UNCOMMENT FOLLOWING PLAY
#  - name: Disaster recovery
#    shell: "{{ item }}"
#    with_items:
#      - mv /etc/etcd/ /etc/etcd.old
#      - tar -C /  -xvf /{{ BACKUPDIR }}/openshift-$HOSTNAME.tgz --wildcards --no-anchored '*etcd*' '*serviceaccounts*'
#      - tar -C /  -xvf /{{ BACKUPDIR }}/etcd-config-$HOSTNAME.tgz
 
 
 
# ETCD DATA DIRECTORY RESTORATION
- hosts: master1
  gather_facts: no
  become: yes
  tasks:
 
  - name: INCLUDING VARIABLE FILE
    include_vars:
      file: ../vars/backuprestore_variable_file.yaml
 
  - name: ETCD HOST UPDATE
    shell: ./restore.sh /{{ BACKUPDIR }}/etcd-data/hot/*.etcd
    args:
      chdir: /opt
  - name: sleep for a bit
    command: 'sleep 5'
 
#LOCAL HOST UPDATE
- hosts: master1
  become: yes
  gather_facts: no
  tasks:
 
  - name: Etcd update localhost
    script: ../scripts/localhost_update.sh
 
##ADD MEMBERS TO CLUSTER
 
#ADDING MASTER2
 
  - name: ETCD_HOSTNAME variable declaration
    shell: awk '/ETCD_NAME/ {print $1; exit}' /etc/etcd/etcd.conf | sed "s/ETCD_NAME=//g"
    register: ETCD_HOSTNAME
   
  - name: Add master2 as etcd member
    shell: etcdctl --cert-file /etc/etcd/peer.crt --key-file /etc/etcd/peer.key --ca-file /etc/etcd/ca.crt -C https://{{ ETCD_HOSTNAME.stdout }}:2379 member add {{ master2 }}  https://{{ master2_ip }}:2380 | egrep ^ETCD > /tmp/master2
 
#MASTER2 UPDATE
- hosts: master2
  become: yes
  gather_facts: no
  tasks:
 
 
  - name: COPY etcd contents
    copy: src=/tmp/master2  dest=/tmp/master2
 
  - name: Master update
    shell: cat /tmp/master2  >> /etc/etcd/etcd.conf
 
  - name: ETCD service start
    systemd: state=started name=etcd
 
  - name: sleep for a bit
    command: 'sleep 5'
 
#ADDING MASTER3
 
#- hosts: master1
#  become: yes
#  gather_facts: no
#  tasks:
# 
#  - name: ETCD_HOSTNAME variable declaration
#    shell: awk '/ETCD_NAME/ {print $1; exit}' /etc/etcd/etcd.conf | sed "s/ETCD_NAME=//g"
#    register: ETCD_HOSTNAME
# 
#  - name: Add master3 as etcd member
#    shell: etcdctl --cert-file /etc/etcd/peer.crt --key-file /etc/etcd/peer.key --ca-file /etc/etcd/ca.crt -C https://{{ ETCD_HOSTNAME.stdout }}:2379 member add {{ master3 }}  https://{{ master3_ip }}:2380 | egrep ^ETCD  > /tmp/master3
# 
# MASTER3 UPDATE
#- hosts: master3
#  become: yes
#  gather_facts: no
#  tasks:
# 
#  - name: COPY etcd contents
#    copy: src=/tmp/master3  dest=/tmp/master3
# 
#  - name: Master update
#    shell: cat /tmp/master3  >> /etc/etcd/etcd.conf
# 
#  - name: ETCD service start
#    systemd: state=started name=etcd
# 
#  - name: sleep for a bit
#    command: 'sleep 5'
 
 
##BRINGING BACK OSE CLUSTER SERVICES
- hosts: masters
  become: yes
  gather_facts: no
  tasks:
  - name: Starting services
    systemd: state=started name="{{ item }}"
    with_items:
      - atomic-openshift-master-api
      - atomic-openshift-master-controllers
      - etcd
 
######################
## RESTORATION OVER ##
######################
